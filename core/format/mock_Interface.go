// Code generated by mockery v2.2.1. DO NOT EDIT.

package format

import (
	service "pixel/store/service"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// MockInterface is an autogenerated mock type for the Interface type
type MockInterface struct {
	mock.Mock
}

// GetCache provides a mock function with given fields: key
func (_m *MockInterface) GetCache(key string) (interface{}, bool) {
	ret := _m.Called(key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// GetDate provides a mock function with given fields:
func (_m *MockInterface) GetDate() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// GetERPCache provides a mock function with given fields: key
func (_m *MockInterface) GetERPCache(key string) (interface{}, bool) {
	ret := _m.Called(key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// GetMP provides a mock function with given fields:
func (_m *MockInterface) GetMP() service.MarketPlaceInterface {
	ret := _m.Called()

	var r0 service.MarketPlaceInterface
	if rf, ok := ret.Get(0).(func() service.MarketPlaceInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.MarketPlaceInterface)
		}
	}

	return r0
}

// GetOFDCache provides a mock function with given fields: key
func (_m *MockInterface) GetOFDCache(key string) (interface{}, bool) {
	ret := _m.Called(key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Parse provides a mock function with given fields:
func (_m *MockInterface) Parse() {
	_m.Called()
}

// SetERPCache provides a mock function with given fields: key, val, duration
func (_m *MockInterface) SetERPCache(key string, val interface{}, duration time.Duration) {
	_m.Called(key, val, duration)
}

// SetOFDCache provides a mock function with given fields: key, val, duration
func (_m *MockInterface) SetOFDCache(key string, val interface{}, duration time.Duration) {
	_m.Called(key, val, duration)
}
