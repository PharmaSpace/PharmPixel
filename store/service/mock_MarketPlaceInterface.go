// Code generated by mockery v2.2.1. DO NOT EDIT.

package service

import (
	store "pixel/store"

	mock "github.com/stretchr/testify/mock"
)

// MockMarketPlaceInterface is an autogenerated mock type for the MarketPlaceInterface type
type MockMarketPlaceInterface struct {
	mock.Mock
}

// GetMatchProducts provides a mock function with given fields: filterDate, isOfd, isErp
func (_m *MockMarketPlaceInterface) GetMatchProducts(filterDate string, isOfd bool, isErp bool) (MatchProducts, error) {
	ret := _m.Called(filterDate, isOfd, isErp)

	var r0 MatchProducts
	if rf, ok := ret.Get(0).(func(string, bool, bool) MatchProducts); ok {
		r0 = rf(filterDate, isOfd, isErp)
	} else {
		r0 = ret.Get(0).(MatchProducts)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, bool, bool) error); ok {
		r1 = rf(filterDate, isOfd, isErp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendOfdProducts provides a mock function with given fields: products, isOfd, isErp
func (_m *MockMarketPlaceInterface) SendOfdProducts(products []Product, isOfd bool, isErp bool) error {
	ret := _m.Called(products, isOfd, isErp)

	var r0 error
	if rf, ok := ret.Get(0).(func([]Product, bool, bool) error); ok {
		r0 = rf(products, isOfd, isErp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendReceipt provides a mock function with given fields: receipts
func (_m *MockMarketPlaceInterface) SendReceipt(receipts []store.Receipt) error {
	ret := _m.Called(receipts)

	var r0 error
	if rf, ok := ret.Get(0).(func([]store.Receipt) error); ok {
		r0 = rf(receipts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
